# MYPERL OVERVIEW

With this guide, you should be able to build the myperl package 
from https://github.com/mrscotty/myperl and the remaining packages
needed for OpenXPKI.

The build script will use both myperl and openxpki git repositories.
The location is configurable, with the following order of precedence:

- Locally specified in ENV (either manually or in local.rc)
- Already checked out in the default shared folder location in Vagrantfile
    (myperl is in ../../../myperl and openxpki is in ../..)
- As last resort, directly from Github

See myperl/build.sh for details.

# BUILD STEPS

## Create Local CPAN Mirror (optional, requires 'minicpan')

    mkdir ~/mirrors
    echo "local: $HOME/mirrors/minicpan"            >  ~/.minicpanrc
    echo "remote: http://artfiles.org/cpan.org/"    >> ~/.minicpanrc
    echo "exact_mirror: 1"                          >> ~/.minicpanrc
    minicpan

## Start Vagrant Instance

This starts and provisions the Vagrant instance:

    # Add mirror to local Vagrantfile config (optional)
    echo '@localcfg["mirror"] = ENV["HOME"] + "/mirrors"' >> Vagrantfile.local

    # debian
    vagrant up build-myperl

    # ubuntu
    vagrant up xenial-myperl
    
## Build All myperl Packages From Clean Instance

Using the fresh instance started above:

    vagrant ssh build-myperl --command '/vagrant/myperl/build.sh all'
    vagrant ssh build-myperl --command '/vagrant/myperl/build.sh collect'

## Test myperl Packages

    vagrant up test-myperl
    vagrant ssh test-myperl --command 'sudo /vagrant/myperl/install-oxi.sh'
    
## Run Tests

    vagrant ssh test-myperl --command 'sudo /vagrant/myperl/run-tests.sh'

# DEVELOPING OPENXPKI WITH MYPERL INSTALLATION

In the "build" instance, after running the full build process:

    # de-install openxpki-core
    sudo /opt/myperl/bin/openxpkictl stop
    sudo dpkg -r myperl-openxpki-core

    git clone --quiet /code-repo ~/git/openxpki
    cd ~/git/openxpki/core/server

    export PATH=/opt/myperl/bin:$PATH
    PERL=/opt/myperl/bin/perl perl Makefile.PL
    # Run unit tests on modules
    make test
    make install
